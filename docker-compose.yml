version: '3.8'

services:
  app:
    build: .
    ports:
      - "3001:3001" # La aplicacion Node.js expuesta en el puerto 3001
    environment:
      - NODE_ENV = production
    container_name: devops-practice-container # Contenedor de la aplicacion

  # Agregando para monitoreo con Prometheus
  # ------------------------------------------------------
  # prometheus:
  #   image: prom/prometheus_latest # Imagen de prometheus
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus.yml # Archivo de configuracion prometheus.yml
  #   ports:
  #     - "9090:9090" # Ecponemos Prometheus en el puerto 9090
  #   container_name: prometheus # Nombre del contenedor de Prometheus
  #   restart: always # Reiniciar el contenedor si falla
  # 
  # Agregado para visualizacion con Grafana
  # ------------------------------------------------------
  # grafana:
  #   image: grafana/grafana:latest # Imagen de Grafana
  #   ports:
  #     - "3000:3000" # Exponemos Grafana en el puerto 3000
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD = admin # Contraseña por defecto para acceso a Grafana
  #   container-name: grafana # Nombre del contenedor de Grafana
  #   restart: always # Reiniciar el contenedor si falla
  #
  # Configuracion actualizada con los cambios solicitados
  # ------------------------------------------------------
  #
  # app:
  #   build: .
  #   ports:
  #     - "3001:3001" # La aplicacion Node.js expuesta en el puerto 3001
  #   environment:
  #     - NODE_ENV = production
  #     - PORT = 3001 # Asegurar que la app este usando el puerto 3001
  #   container_name: devops-practice-container # Nombre del contenedor de la aplicacion
  #
  # prometheus:
  #     image: prom/prometheus:latest # Imagen de Prometheus
  #     volumes:
  #       - ./prometheus.yml:etc/prometheus/prometheus.yml # Montar el archivo de configuracion prometheus.yml
  #     ports:
  #       - "9090:9090" # Exponer Prometheus en el puerto 9090
  #     container_name: prometheus # Nombre del contenedor de Prometheus
  #     restart: always # Reiniciar si el contenedor falla
  # 
  # grafana:
  #   image: grafana/grafana:latest # imagen de Grafana
  #   ports:
  #     - "3000:3000" # Exponer Grafana en el puerto 3000
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD = admin # Contraseña por defecto para el acceso a Grafana
  #   container_name: grafana # Nombre del contenedor de Grafana
  #   restart: always # Reinicar si el contenedor falla
